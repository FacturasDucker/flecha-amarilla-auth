# JWT Configuration
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=flecha-amarilla-auth
smallrye.jwt.sign.key.location=privateKey.pem

# JWT token lifespan (24 hours = 86400 seconds)
quarkus.smallrye-jwt.token.lifespan=86400

# Enable JWT Authentication
quarkus.http.auth.permission.authenticated.paths=/api/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# Exclude login and register endpoints from authentication
quarkus.http.auth.permission.public.paths=/api/auth/login,/api/auth/register
quarkus.http.auth.permission.public.policy=permit

# Database configuration

# MariaDB configuration
#quarkus.datasource.db-kind=mariadb
#quarkus.datasource.username=user
#quarkus.datasource.password=admin
#quarkus.datasource.jdbc.url=jdbc:mariadb://localhost:3306/famarilla
#todo change the value from update to create
#quarkus.hibernate-orm.database.generation=update

# CORS configuration
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H

# Default admin credentials (change in production)
#app.admin.username=admin
#app.admin.password=adminPassword
jwt.duration.seconds=86400

# Configuración del cliente REST para el microservicio de clientes
#quarkus.rest-client."org.flechaamarilla.service.ClientService".url=http://localhost:8081

org.flechaamarilla.client.UserClient/mp-rest/url=http://localhost:8081





